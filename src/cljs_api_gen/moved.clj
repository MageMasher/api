(ns cljs-api-gen.moved)

(defn invert-map [m]
  (zipmap (vals m) (keys m)))

(def moved-to
  {;; namespaces
   "cljs.spec" "cljs.spec.alpha"
   "cljs.spec.test" "cljs.spec.test.alpha"
   "cljs.spec.impl.gen" "cljs.spec.gen.alpha"

   ;; symbols
   "cljs.core/PersistentVector.EMPTY_NODE" "cljs.core/PersistentVector.EMPTY-NODE"
   "cljs.core/unchecked-substract-int" "cljs.core/unchecked-subtract-int"
   "cljs.core/unchecked-substract" "cljs.core/unchecked-subtract"
   "cljs.pprint/PrettyFlush" "cljs.pprint/IPrettyFlush"
   "cljs.repl.browser/parse-headers" "cljs.repl.server/parse-headers"
   "cljs.repl.browser/read-get" "cljs.repl.server/read-get"
   "cljs.repl.browser/read-headers" "cljs.repl.server/read-headers"
   "cljs.repl.browser/read-post" "cljs.repl.server/read-post"
   "cljs.repl.browser/read-request" "cljs.repl.server/read-request"
   "cljs.repl.browser/send-404" "cljs.repl.server/send-404"
   "cljs.repl.browser/send-and-close" "cljs.repl.server/send-and-close"
   "cljs.repl.browser/server-state" "cljs.repl.server/state"
   "cljs.repl.browser/start-server" "cljs.repl.server/start"
   "cljs.repl.browser/stop-server" "cljs.repl.server/stop"
   "clojure.browser.event/EventType" "clojure.browser.event/IEventType"

   ;; cljs.spec migration to cljs.spec.alpha
   "cljs.spec.impl.gen/one-of" "cljs.spec.gen.alpha/one-of"
   "cljs.spec.impl.gen/char-alpha" "cljs.spec.gen.alpha/char-alpha"
   "cljs.spec/Specize" "cljs.spec.alpha/Specize"
   "cljs.spec.impl.gen/large-integer"
   "cljs.spec.gen.alpha/large-integer"
   "cljs.spec/describe" "cljs.spec.alpha/describe"
   "cljs.spec.impl.gen/such-that" "cljs.spec.gen.alpha/such-that"
   "cljs.spec/*compile-asserts*" "cljs.spec.alpha/*compile-asserts*"
   "cljs.spec.impl.gen/list" "cljs.spec.gen.alpha/list"
   "cljs.spec.impl.gen/int" "cljs.spec.gen.alpha/int"
   "cljs.spec.impl.gen/boolean" "cljs.spec.gen.alpha/boolean"
   "cljs.spec/*fspec-iterations*" "cljs.spec.alpha/*fspec-iterations*"
   "cljs.spec.impl.gen/tuple" "cljs.spec.gen.alpha/tuple"
   "cljs.spec/int-in" "cljs.spec.alpha/int-in"
   "cljs.spec.impl.gen/ratio" "cljs.spec.gen.alpha/ratio"
   "cljs.spec.impl.gen/large-integer*"
   "cljs.spec.gen.alpha/large-integer*"
   "cljs.spec/exercise" "cljs.spec.alpha/exercise"
   "cljs.spec/cat" "cljs.spec.alpha/cat"
   "cljs.spec/unstrument" "cljs.spec.alpha/unstrument"
   "cljs.spec.impl.gen/elements" "cljs.spec.gen.alpha/elements"
   "cljs.spec.test/abbrev-result" "cljs.spec.test.alpha/abbrev-result"
   "cljs.spec.impl.gen/symbol" "cljs.spec.gen.alpha/symbol"
   "cljs.spec/or" "cljs.spec.alpha/or"
   "cljs.spec/invalid?" "cljs.spec.alpha/invalid?"
   "cljs.spec.impl.gen/gen-for-pred" "cljs.spec.gen.alpha/gen-for-pred"
   "cljs.spec.impl.gen/uuid" "cljs.spec.gen.alpha/uuid"
   "cljs.spec.test/instrumentable-syms"
   "cljs.spec.test.alpha/instrumentable-syms"
   "cljs.spec/*coll-check-limit*" "cljs.spec.alpha/*coll-check-limit*"
   "cljs.spec/conform" "cljs.spec.alpha/conform"
   "cljs.spec/int-in-range?" "cljs.spec.alpha/int-in-range?"
   "cljs.spec.impl.gen/bind" "cljs.spec.gen.alpha/bind"
   "cljs.spec/form" "cljs.spec.alpha/form"
   "cljs.spec/*" "cljs.spec.alpha/*"
   "cljs.spec.impl.gen/vector" "cljs.spec.gen.alpha/vector"
   "cljs.spec/registry-ref" "cljs.spec.alpha/registry-ref"
   "cljs.spec/valid?" "cljs.spec.alpha/valid?"
   "cljs.spec/with-gen" "cljs.spec.alpha/with-gen"
   "cljs.spec/explain-str" "cljs.spec.alpha/explain-str"
   "cljs.spec/coll-of" "cljs.spec.alpha/coll-of"
   "cljs.spec/instrument-ns" "cljs.spec.alpha/instrument-ns"
   "cljs.spec/unform" "cljs.spec.alpha/unform"
   "cljs.spec/def" "cljs.spec.alpha/def"
   "cljs.spec/nilable" "cljs.spec.alpha/nilable"
   "cljs.spec/alt" "cljs.spec.alpha/alt"
   "cljs.spec.test/instrument-1" "cljs.spec.test.alpha/instrument-1"
   "cljs.spec.impl.gen/simple-type-printable"
   "cljs.spec.gen.alpha/simple-type-printable"
   "cljs.spec.impl.gen/delay" "cljs.spec.gen.alpha/delay"
   "cljs.spec.test/distinct-by" "cljs.spec.test.alpha/distinct-by"
   "cljs.spec.impl.gen/LazyVar" "cljs.spec.gen.alpha/LazyVar"
   "cljs.spec.test/->sym" "cljs.spec.test.alpha/->sym"
   "cljs.spec/assert*" "cljs.spec.alpha/assert*"
   "cljs.spec/conformer" "cljs.spec.alpha/conformer"
   "cljs.spec/spec" "cljs.spec.alpha/spec"
   "cljs.spec.impl.gen/double*" "cljs.spec.gen.alpha/double*"
   "cljs.spec.test/with-instrument-disabled"
   "cljs.spec.test.alpha/with-instrument-disabled"
   "cljs.spec/exercise-fn" "cljs.spec.alpha/exercise-fn"
   "cljs.spec.test/instrument" "cljs.spec.test.alpha/instrument"
   "cljs.spec.impl.gen/choose" "cljs.spec.gen.alpha/choose"
   "cljs.spec/get-spec" "cljs.spec.alpha/get-spec"
   "cljs.spec.impl.gen/fmap" "cljs.spec.gen.alpha/fmap"
   "cljs.spec.impl.gen/any" "cljs.spec.gen.alpha/any"
   "cljs.spec.test/run-all-tests" "cljs.spec.test.alpha/run-all-tests"
   "cljs.spec.impl.gen/string-ascii" "cljs.spec.gen.alpha/string-ascii"
   "cljs.spec/&" "cljs.spec.alpha/&"
   "cljs.spec.test/checkable-syms" "cljs.spec.test.alpha/checkable-syms"
   "cljs.spec/fdef" "cljs.spec.alpha/fdef"
   "cljs.spec.impl.gen/sample" "cljs.spec.gen.alpha/sample"
   "cljs.spec/*explain-out*" "cljs.spec.alpha/*explain-out*"
   "cljs.spec/every" "cljs.spec.alpha/every"
   "cljs.spec/check-asserts?" "cljs.spec.alpha/check-asserts?"
   "cljs.spec.test/summarize-results"
   "cljs.spec.test.alpha/summarize-results"
   "cljs.spec.impl.gen/hash-map" "cljs.spec.gen.alpha/hash-map"
   "cljs.spec/every-kv" "cljs.spec.alpha/every-kv"
   "cljs.spec/Spec" "cljs.spec.alpha/Spec"
   "cljs.spec.impl.gen/symbol-ns" "cljs.spec.gen.alpha/symbol-ns"
   "cljs.spec.impl.gen/any-printable"
   "cljs.spec.gen.alpha/any-printable"
   "cljs.spec/abbrev" "cljs.spec.alpha/abbrev"
   "cljs.spec/explain-printer" "cljs.spec.alpha/explain-printer"
   "cljs.spec/nonconforming" "cljs.spec.alpha/nonconforming"
   "cljs.spec/check-asserts" "cljs.spec.alpha/check-asserts"
   "cljs.spec/map-of" "cljs.spec.alpha/map-of"
   "cljs.spec/+" "cljs.spec.alpha/+"
   "cljs.spec/explain" "cljs.spec.alpha/explain"
   "cljs.spec.impl.gen/char-ascii" "cljs.spec.gen.alpha/char-ascii"
   "cljs.spec.impl.gen/cat" "cljs.spec.gen.alpha/cat"
   "cljs.spec/speced-vars*" "cljs.spec.alpha/speced-vars*"
   "cljs.spec/double-in" "cljs.spec.alpha/double-in"
   "cljs.spec.impl.gen/quick-check" "cljs.spec.gen.alpha/quick-check"
   "cljs.spec/?" "cljs.spec.alpha/?"
   "cljs.spec/*coll-error-limit*" "cljs.spec.alpha/*coll-error-limit*"
   "cljs.spec/instrument-all" "cljs.spec.alpha/instrument-all"
   "cljs.spec/instrument" "cljs.spec.alpha/instrument"
   "cljs.spec.impl.gen/set" "cljs.spec.gen.alpha/set"
   "cljs.spec.impl.gen/return" "cljs.spec.gen.alpha/return"
   "cljs.spec.test/get-ua-product" "cljs.spec.test.alpha/get-ua-product"
   "cljs.spec/instrument*" "cljs.spec.alpha/instrument*"
   "cljs.spec.test/unstrument" "cljs.spec.test.alpha/unstrument"
   "cljs.spec.impl.gen/vector-distinct"
   "cljs.spec.gen.alpha/vector-distinct"
   "cljs.spec.test/get-env" "cljs.spec.test.alpha/get-env"
   "cljs.spec.impl.gen/double" "cljs.spec.gen.alpha/double"
   "cljs.spec/unstrument-ns" "cljs.spec.alpha/unstrument-ns"
   "cljs.spec/fspec" "cljs.spec.alpha/fspec"
   "cljs.spec/coll-gen" "cljs.spec.alpha/coll-gen"
   "cljs.spec/and" "cljs.spec.alpha/and"
   "cljs.spec/merge" "cljs.spec.alpha/merge"
   "cljs.spec.test/check" "cljs.spec.test.alpha/check"
   "cljs.spec.test/enumerate-namespace"
   "cljs.spec.test.alpha/enumerate-namespace"
   "cljs.spec/MAX_INT" "cljs.spec.alpha/MAX_INT"
   "cljs.spec/spec?" "cljs.spec.alpha/spec?"
   "cljs.spec.test/check-var" "cljs.spec.test.alpha/check-var"
   "cljs.spec/regex?" "cljs.spec.alpha/regex?"
   "cljs.spec.impl.gen/frequency" "cljs.spec.gen.alpha/frequency"
   "cljs.spec.impl.gen/char" "cljs.spec.gen.alpha/char"
   "cljs.spec.impl.gen/simple-type" "cljs.spec.gen.alpha/simple-type"
   "cljs.spec.impl.gen/map" "cljs.spec.gen.alpha/map"
   "cljs.spec/coll-checker" "cljs.spec.alpha/coll-checker"
   "cljs.spec.impl.gen/for-all*" "cljs.spec.gen.alpha/for-all*"
   "cljs.spec/with-instrument-disabled"
   "cljs.spec.alpha/with-instrument-disabled"
   "cljs.spec/assert" "cljs.spec.alpha/assert"
   "cljs.spec/multi-spec" "cljs.spec.alpha/multi-spec"
   "cljs.spec.test/check-1" "cljs.spec.test.alpha/check-1"
   "cljs.spec.test/checkable-syms*"
   "cljs.spec.test.alpha/checkable-syms*"
   "cljs.spec.impl.gen/dynaload" "cljs.spec.gen.alpha/dynaload"
   "cljs.spec/fn-specs" "cljs.spec.alpha/fn-specs"
   "cljs.spec/unstrument*" "cljs.spec.alpha/unstrument*"
   "cljs.spec/unstrument-all" "cljs.spec.alpha/unstrument-all"
   "cljs.spec.impl.gen/string-alphanumeric"
   "cljs.spec.gen.alpha/string-alphanumeric"
   "cljs.spec.test/unstrument-1" "cljs.spec.test.alpha/unstrument-1"
   "cljs.spec.impl.gen/generate" "cljs.spec.gen.alpha/generate"
   "cljs.spec/inst-in-range?" "cljs.spec.alpha/inst-in-range?"
   "cljs.spec.impl.gen/string" "cljs.spec.gen.alpha/string"
   "cljs.spec.impl.gen/keyword-ns" "cljs.spec.gen.alpha/keyword-ns"
   "cljs.spec.test/run-tests" "cljs.spec.test.alpha/run-tests"
   "cljs.spec.impl.gen/keyword" "cljs.spec.gen.alpha/keyword"
   "cljs.spec/keys*" "cljs.spec.alpha/keys*"
   "cljs.spec/keys" "cljs.spec.alpha/keys"
   "cljs.spec/*recursion-limit*" "cljs.spec.alpha/*recursion-limit*"
   "cljs.spec/explain-data*" "cljs.spec.alpha/explain-data*"
   "cljs.spec/tuple" "cljs.spec.alpha/tuple"
   "cljs.spec/inst-in" "cljs.spec.alpha/inst-in"
   "cljs.spec.impl.gen/not-empty" "cljs.spec.gen.alpha/not-empty"
   "cljs.spec/explain-data" "cljs.spec.alpha/explain-data"
   "cljs.spec/explain-out" "cljs.spec.alpha/explain-out"
   "cljs.spec/speced-vars" "cljs.spec.alpha/speced-vars"
   "cljs.spec.test/check-fn" "cljs.spec.test.alpha/check-fn"
   "cljs.spec/gen" "cljs.spec.alpha/gen"
   "cljs.spec.test/get-host-port" "cljs.spec.test.alpha/get-host-port"
   "cljs.spec.impl.gen/char-alphanumeric"
   "cljs.spec.gen.alpha/char-alphanumeric"
   "cljs.spec/registry" "cljs.spec.alpha/registry"})

(def moved-from (invert-map moved-to))
