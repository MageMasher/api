(ns cljs-api-gen.repo-docs
  (:require
    [clojure.java.shell :refer [sh]]
    [cljs-api-gen.config :refer [*repo-version*
                                 docs-repo-dir
                                 docs-branch]]
    [cljs-api-gen.repo-cljs :refer [cljs-tag->version
                                    clj-tag->version]]
    [me.raynes.fs :refer [mkdir exists?]]
    ))

(defn git-docs-repo!
  [& args]
  (apply sh "git" (concat args [:dir docs-repo-dir])))

(defn docs-repo-branch
  []
  (let [result (git-docs-repo! "rev-parse" "--abbrev-ref" "HEAD")]
    (:out result)))

(defn docs-repo-branch-exists?
  [branch]
  (let [result (git-docs-repo! "show-ref" "--verify" branch)]
    (zero? (:exit result))))

(defn prepare-docs-repo!
  []
  ;; create repo if needed
  (when-not (exists? docs-repo-dir)
    (mkdir docs-repo-dir)
    (git-docs-repo! "init"))

  ;; change to docs branch
  (when-not (= docs-branch (docs-repo-branch))
    (if (docs-repo-branch-exists? docs-branch)
      (git-docs-repo! "checkout" docs-branch)
      (git-docs-repo! "checkout" "--orphan" docs-branch))))

(defn docs-repo-has-version?
  [v]
  (let [version (cljs-tag->version v)
        result (git-docs-repo! "rev-parse" version)
        present? (zero? (:exit result))]
    present?))

(defn docs-repo-out-of-sync!
  [msg]
  (println "\nERROR: docs-repo out of sync with symbol-history.")
  (println "  " msg)
  (println "   You will need to delete symbol-history and docs-repo and start the tool again.")
  (System/exit 1))

(defn verify-docs-repo-sync!
  [past-versions versions-left]
  (doseq [version past-versions]
    (when-not (docs-repo-has-version? version)
      (docs-repo-out-of-sync! (str version " has no tag"))))
  (doseq [version versions-left]
    (when (docs-repo-has-version? version)
      (docs-repo-out-of-sync! (str version " already has tag")))))

(defn clear-docs-repo!
  []
  (git-docs-repo! "rm" "-rf" "."))

(defn commit-docs-repo!
  []
  (let [clj-t  (get *repo-version* "clojure")
        cljs-t (get *repo-version* "clojurescript")
        clj-v  (clj-tag->version clj-t)
        cljs-v (cljs-tag->version cljs-t)
        msg (str cljs-v "\n"
                 "\n"
                 "- auto-generated by cljs-api-parser\n"
                 "  https://github.com/shaunlebron/cljs-api-parser\n"
                 "\n"
                 "- parsed from:\n"
                 "  ClojureScript " cljs-v "\n"
                 "  Clojure " clj-v "\n")]
    (git-docs-repo! "add" ".")
    (git-docs-repo! "commit" "-m" msg)
    (git-docs-repo! "tag" cljs-v)))

