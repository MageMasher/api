===== Name
syntax/predicate

===== Display
? predicate

===== Usage
foo?

===== Description

A naming convention for predicate functions (unenforced).

A predicate function is one that returns `true` or `false`, and is presumably
pure (not having any side-effects on state).

Some predicate functions which use this convention:

- [cljs.core/even?]
- [cljs.core/empty?]
- [cljs.core/contains?]
- [cljs.core/nil?]

It is sometimes used to name boolean values as well, not just predicate functions.

===== Related
syntax/impure

===== Example#5a85c7

Create a `divisible?` predicate:

```clj
(defn divisible? [n factor]
  (zero? (mod n factor)))

(divisible? 15 3)
;;=> true

(divisible? 15 2)
;;=> false

(filter #(divisible? 15 %) (range 15))
;;=> (1 3 5)
```

